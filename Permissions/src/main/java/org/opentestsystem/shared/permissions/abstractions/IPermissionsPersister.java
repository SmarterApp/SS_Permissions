/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at 
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.permissions.abstractions;

import java.util.Collection;
import java.util.List;
import java.util.Map;

import org.apache.http.client.HttpResponseException;
import org.opentestsystem.shared.permissions.data.AllowableEntityType;
import org.opentestsystem.shared.permissions.data.Component;
import org.opentestsystem.shared.permissions.data.Permission;
import org.opentestsystem.shared.permissions.data.Permissions;
import org.opentestsystem.shared.permissions.data.Role;
import org.opentestsystem.shared.permissions.exceptions.PermissionsPersistException;
import org.opentestsystem.shared.permissions.exceptions.PermissionsRetrievalException;

public abstract class IPermissionsPersister
{
  private Permissions _myPermissions = null;

  // Overall serialization/deserialization methods
  public abstract void persist () throws PermissionsPersistException;

  public Permissions retrieve () throws PermissionsRetrievalException
  {
    _myPermissions = customRetrieve ();
    return _myPermissions;
  }

  public Permissions getPermissions ()
  {
    return _myPermissions;
  }

  public void setPermissions (Permissions value)
  {
    _myPermissions = value;
  }

  // Start XHR API methods
  public abstract Collection<Role> getAllRoles () throws PermissionsRetrievalException;

  public abstract Role getRoleByRoleName (String name) throws PermissionsRetrievalException;

  public abstract Collection<Component> getAllComponents () throws PermissionsRetrievalException;

  public abstract Component getComponentByComponentName (String name) throws PermissionsRetrievalException, HttpResponseException;

  public abstract List<Role> getRoleByComponent (String componentName) throws PermissionsRetrievalException;

  public abstract List<Role> getRoleByComponentandPermission (String componentName, String permission) throws PermissionsRetrievalException;

  public abstract List<Component> getComponentByRole (String roleName) throws PermissionsRetrievalException;

  public abstract List<Permission> getPermissionByRoleAndComponent (String roleName, String componentName) throws PermissionsRetrievalException;

  // End XHR API methods

  // Start Presentation API methods
  public abstract Collection<AllowableEntityType> getAllAllowableEntities () throws PermissionsRetrievalException;

  // End Presentation API methods
  protected abstract Permissions customRetrieve () throws PermissionsRetrievalException;

  public abstract void deleteRole (final String roleId) throws PermissionsPersistException;

  public abstract void deleteComponent (final String componentId) throws PermissionsPersistException;

  public abstract void deletePermission (final String componentId, final String permissionId) throws PermissionsPersistException, PermissionsRetrievalException;

  public abstract void deleteEntity (final String roleId, final String entity) throws PermissionsPersistException, PermissionsRetrievalException;

  public abstract void addEntity (final String roleId, final String entity) throws PermissionsPersistException, PermissionsRetrievalException;

  public abstract void addRole (String roleId) throws PermissionsPersistException, PermissionsRetrievalException, HttpResponseException;

  public abstract void editRole (String roleId, String newRole) throws PermissionsRetrievalException, PermissionsPersistException, HttpResponseException;

  public abstract void addComponent (String componentId) throws PermissionsPersistException, PermissionsRetrievalException, HttpResponseException;

  public abstract void editComponent (String componentId, String newComponent) throws PermissionsPersistException, PermissionsRetrievalException, HttpResponseException;

  public abstract void addPermission (String componentId, String permissionId) throws PermissionsPersistException, PermissionsRetrievalException, HttpResponseException;

  public abstract void editPermission (String componentId, String permissionId, String newPermission) throws PermissionsRetrievalException, PermissionsPersistException;

  public abstract void addMapping (String componentId, String permissionId, String roleId) throws PermissionsPersistException;

  public abstract void deleteMapping (String componentId, String permissionId, String roleId) throws PermissionsPersistException;

  public abstract List<Permission> getAllPermissions () throws PermissionsRetrievalException;

  public abstract Map<String, Object> getAllComponentsAndRoles () throws PermissionsRetrievalException;

  public abstract List<Permission> getPermissionsByComponent (String componentId) throws PermissionsRetrievalException, HttpResponseException;

}
